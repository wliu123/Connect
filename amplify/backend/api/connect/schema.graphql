type Users @model @auth(rules: [
    {allow: private, operations: [read]},
    {allow: public},
    {allow: owner}
]) 
{
  id: ID!
  name: String
  profile_picture: String
  email: String! @index(name: "byEmail", queryField: "idByEmail")
  bio: String
  followersCount: Int
  followingCount: Int
  hangouts: [Hangouts] @hasMany(indexName: "byUser", fields: ["id"])
  
}


type Hangouts @model @auth(rules: [
    {allow: private, operations: [read, update, delete]},
    {allow: public},
    {allow: owner}
]) 
{
  id: ID!
  title: String!
  location: String!
  description: String!
  created_by: ID! @index(name: "byUser", sortKeyFields: ["date"])
  joined_by: [ID]
  joined: Boolean
  date: AWSDate!
  public: Boolean
  join_count: Int
  user: Users @belongsTo(fields: ["created_by"])
}

type Friends @model @auth(rules: [
    {allow: private, operations: [read]},
    {allow: public},
    {allow: owner}
]) 
{
  id: ID!
  following: Boolean!
  followedBy: Boolean!
  name: String
  profile_picture: String
  email: String!
  bio: String
  followersCount: Int
  followingCount: Int
  
}
 